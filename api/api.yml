swagger: "2.0"
info:
  description: "My Hacker News documentation"
  version: "1.0.0"
  title: "My Hacker News"
host: "myhackernews.tk"
basePath: "/api"
tags:
- name: "user"
  description: "Everything about users"
- name: "contribution"
  description: "Contributions like news and asks"
- name: "comment"
  description: "Comments and replies for contributions"
schemes:
- "http"
paths:
  /asks:
    get:
      tags:
        - "contribution"
      summary: "Endpoint to view the asks"
      description: "Returns all the ask contributions sorted by n_votes"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
            description: "Successful operation. Returns the array of asks"
            schema:
              type: "array"
              items:
                $ref: "#/definitions/Ask"
    post:
      tags:
        - "contribution"
      summary: "Endpoint to create new ask contributions"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Ask"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/New_Ask"
      responses:
        201:
            description: "Successful operation. Returns created contribution"
            schema:
              $ref: "#/definitions/Ask"
        400:
            description: "Bad request, there are missing parameters or they do not have valid format"
        401:
            description: "Forbidden, missing authentication"
      security:
      - api_key: []
  /news:
    get:
      tags:
        - "contribution"
      summary: "Endpoint to view the news"
      description: "Returns all the news contributions sorted by n_votes"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
            description: "Successful operation. Returns the array of news"
            schema:
              type: "array"
              items:
                $ref: "#/definitions/New"
    post:
      tags:
        - "contribution"
      summary: "Endpoint to create new new contributions"
      description: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "New"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/New_New"
      responses:
        201:
            description: "Successful operation. Returns created contribution"
            schema:
              $ref: "#/definitions/New"
        400:
            description: "Bad request, there are missing parameters or they do not have valid format"
        401:
            description: "Forbidden, missing authentication"
        409:
            description: "Conflict, specified URL already posted. Returning existing post"
            schema:
              $ref: "#/definitions/New"
      security:
      - api_key: []
  /newest:
    get:
      tags:
        - "contribution"
      summary: "Endpoint to view the contributions"
      description: "Returns all the newest contributions sorted by more recent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
            description: "Successful operation. Returns the array of Contributions"
            schema:
              type: "array"
              items:
                $ref: "#/definitions/Contribution"


  /users/{userID}/threads:
    get:
      tags:
        - "user"
      summary: "Endpoint to get the comments of a specific user"
      description: "Returns all the comments of the user"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "path"
          name: "userID"
          description: "ID of threads to return"
          required: true
          type: "string"
      responses:
        200:
            description: "Successful operation. Returns the array of comments"
            schema:
              type: "array"
              items:
                $ref: "#/definitions/Comment"
        404:
            description: "User not found"

  /contributions/{contributionID}:
    get:
      tags:
        - "contribution"
      summary: "Endpoint to get a specific contribution"
      description: "Returns a single contribution"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "path"
          name: "contributionID"
          description: "ID of contribution to return"
          required: true
          type: "string"
      responses:
        200:
            description: "Successful operation. Returns asked contribution"
            schema:
              $ref: "#/definitions/Contribution"
        400:
            description: "Bad request, there are missing parameters or they do not have valid format"
        404:
            description: "Contribution not found"
    delete:
      tags:
        - "contribution"
      summary: "Endpoint to delete a especific contribution"
      description: "Deletes a contribution and all of it's comments"
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - in: "path"
          name: "contributionID"
          description: "ID of the contribution to delete"
          required: true
          type: "string"
      responses:
        200:
            description: "Suuccesscul operation. Contribution deleted"
        401:
            description: "Forbidden. Missing Authentication"
        403:
            description: "Unauthorized. Missing permissions to delete the contribution"
        404:
            description: "Contribution not found"
      security:
      - api_key: []

  /contributions/{contributionID}/vote:
    post:
      tags:
        - "contribution"
      summary: "Endpoint to vote a specific contribution"
      description: "Returns a single contribution"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "path"
          name: "contributionID"
          description: "ID of contribution to return"
          required: true
          type: "string"
      responses:
        200:
            description: "Successful operation. Returns voted contribution"
            schema:
              $ref: "#/definitions/Contribution"
        400:
            description: "Bad request, there are missing parameters or they do not have valid format"
        401:
            description: "Forbidden, missing authentication"
        403:
            description: "Unauthorized. Missing permissions to update the resources"
        404:
            description: "Contribution not found"
        409:
            description: "Conflict. You have already vote for this contribution"
      security:
      - api_key: []
    delete:
      tags:
        - "contribution"
      summary: "Endpoint to unvote a specific contribution"
      description: "Returns a single contribution"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "path"
          name: "contributionID"
          description: "ID of contribution to return"
          required: true
          type: "string"
      responses:
        200:
            description: "Successful operation. Returns unvoted contribution"
            schema:
              $ref: "#/definitions/Contribution"
        400:
            description: "Bad request, there are missing parameters or they do not have valid format"
        401:
            description: "Forbidden, missing authentication"
        403:
            description: "Unauthorized. Missing permissions to update the resources"
        404:
            description: "Contribution not found"
        409:
            description: "Conflict. You have already unvote this contribution"
      security:
      - api_key: []

  /contributions/{contributionID}/comments:
    post:
      tags:
        - "contribution"
      summary: "Endpoint to comment a specific contribution"
      description: "Returns created comment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "path"
          name: "contributionID"
          description: "ID of contribution to comment"
          required: true
          type: "string"
        - in: "body"
          name: "comment"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/New_Comment"
      responses:
        200:
            description: "Successful operation. Returns created comment"
            schema:
              $ref: "#/definitions/Comment"
        400:
            description: "Bad request, there are missing parameters or they do not have valid format"
        401:
            description: "Forbidden, missing authentication"
        404:
            description: "Contribution not found"
      security:
      - api_key: []
  /comments/{parentID}/replies:
    post:
      tags:
        - "comment"
      summary: "Endpoint to reply to a specific contribution"
      description: "Returns created comment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "path"
          name: "parentID"
          description: "ID of comment to reply"
          required: true
          type: "string"
        - in: "body"
          name: "comment"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/New_Comment"
      responses:
        200:
            description: "Successful operation. Returns created comment"
            schema:
              $ref: "#/definitions/Comment"
        400:
            description: "Bad request, there are missing parameters or they do not have valid format"
        401:
            description: "Forbidden, missing authentication"
        404:
            description: "Contribution not found"
      security:
      - api_key: []

  /comments/{commentID}:
    get:
      tags:
        - "comment"
      summary: "Endpoint to get a specific comment"
      description: "Returns a single comment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "path"
          name: "commentID"
          description: "ID of comment to return"
          required: true
          type: "string"
      responses:
        200:
            description: "Successful operation. Returns asked comment"
            schema:
              $ref: "#/definitions/Comment"
        400:
            description: "Bad request, there are missing parameters or they do not have valid format"
        404:
            description: "Contribution not found"
    delete:
      tags:
        - "comment"
      summary: "Endpoint to get delete a specific comment"
      description: "Delete a single comment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "path"
          name: "commentID"
          description: "ID of comment to delete"
          required: true
          type: "string"
      responses:
        200:
            description: "Successful operation. Returns asked comment"
        401:
            description: "Forbidden, missing authentication"
        403:
            description: "Unauthorized. Missing permissions to update the resources"
        404:
            description: "Comment not found"
      security:
      - api_key: []

  /comments/{commentID}/vote:
    post:
      tags:
        - "comment"
      summary: "Endpoint to vote a specific comment"
      description: "Returns a single comment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "path"
          name: "commentID"
          description: "ID of a comment to return"
          required: true
          type: "string"
      responses:
        200:
            description: "Successful operation. Returns voted comment"
            schema:
              $ref: "#/definitions/Comment"
        400:
            description: "Bad request, there are missing parameters or they do not have valid format"
        401:
            description: "Forbidden, missing authentication"
        403:
            description: "Unauthorized. Missing permissions to update the resources"
        404:
            description: "Comment not found"
        409:
            description: "Conflict. You have already vote for this comment"
      security:
      - api_key: []
    delete:
      tags:
        - "comment"
      summary: "Endpoint to unvote a specific comment"
      description: "Returns a single comment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "path"
          name: "commentID"
          description: "ID of comment to return"
          required: true
          type: "string"
      responses:
        200:
            description: "Successful operation. Returns unvoted comment"
            schema:
              $ref: "#/definitions/Comment"
        400:
            description: "Bad request, there are missing parameters or they do not have valid format"
        401:
            description: "Forbidden, missing authentication"
        403:
            description: "Unauthorized. Missing permissions to update the resources"
        404:
            description: "Comment not found"
        409:
            description: "Conflict. You have already unvote this comment"
      security:
      - api_key: []

  /users/{userID}:
    get:
      tags:
        - "user"
      summary: "Endpoint to get a specific users"
      description: "Returns a single user"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "userID"
        description: "ID of user to return"
        required: true
        type: "string"
      responses:
        200:
            description: "Successful operation. Returns asked user"
            schema:
              $ref: "#/definitions/User"
        400:
            description: "Bad request, there are missing parameters or they do not have valid format"
        404:
            description: "User not found"
    put:
      tags:
        - "user"
      summary: "Endpoint to update an existing user"
      description: "Returns the updated user"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "userID"
        description: "ID of user to return"
        required: true
        type: "string"
      - in: "body"
        name: "user"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Update_User"
      responses:
        200:
            description: "Successful operation. Returns updated user"
            schema:
              $ref: "#/definitions/User"
        400:
            description: "Bad request, there are missing parameters or they do not have valid format"
        401:
            description: "Forbidden, missing authentication"
        403:
            description: "Unauthorized. Missing permissions to update the resources"
      security:
      - api_key: []


securityDefinitions:
  api_key:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  User:
    type: "object"
    required:
      - "email"
    properties:
      email:
        type: "string"
      karma:
        type: "integer"
        format: "int64"
      about:
        type: "string"
  Update_User:
    type: "object"
    required:
      - "email"
    properties:
      about:
        type: "string"

  Contribution:
    type: "object"
    required:
      - "title"
      - "text"
      - "username"
    properties:
      id:
        type: "integer"
        format: "int64"
      kind:
        type: "string"
      n_votes:
        type: "integer"
        format: "int64"
      n_comments:
        type: "integer"
        format: "int 64"
      time:
        type: "string"
        format: "date-time"
      title:
        type: "string"
      text:
        type: "string"
      url:
        type: "string"
      user:
        type: "string"

  New:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      url:
        type: "string"
      time:
        type: "string"
        format: "date-time"
      username:
        type: "string"
      n_votes:
        type: "integer"
        format: "int64"
      n_comments:
        type: "integer"
        format: "int64"

  Ask:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      text:
        type: "string"
      time:
        type: "string"
        format: "date-time"
      username:
        type: "string"
      kind:
        type: "string"
      n_votes:
        type: "integer"
        format: "int64"
  New_Ask:
    type: "object"
    properties:
      title:
        type: "string"
      text:
        type: "string"
  New_New:
    type: "object"
    properties:
      title:
        type: "string"
      url:
        type: "string"
  Comment:
    type: "object"
    required:
      - "text"
      - "username"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      time:
        type: "string"
        format: "date-time"
      text:
        type: "string"
      contribution_id:
        type: "integer"
        format: "int64"
      parent_id:
        type: "integer"
        format: "int64"
      n_votes:
        type: "integer"
        format: "int64"
  New_Comment:
    type: "object"
    properties:
      text:
        type: "string"
